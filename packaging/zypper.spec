# 
# Do NOT Edit the Auto-generated Part!
# Generated by: spectacle version 0.22
# 
# >> macros
# << macros

Name:       zypper
Summary:    Command line software manager using libzypp
Version:    1.6.10
Release:    1
Group:      System/Packages
License:    GPL-2.0+
URL:        http://en.opensuse.org/Zypper
Source0:    %{name}-%{version}.tar.bz2
Source1:    %{name}-rpmlintrc
Source1001: packaging/zypper.manifest 
Patch0:     0001-Support-searching-file-with-full-path.patch
Patch1:     0002-Support-fuzzy-search-file.patch
Patch2:     0003-fix-linker-error-with-ncurses-library.patch
Requires:   procps
BuildRequires:  pkgconfig(libzypp)
BuildRequires:  pkgconfig(augeas)
BuildRequires:  boost-devel >= 1.33.1
BuildRequires:  gettext-devel >= 0.15
BuildRequires:  readline-devel >= 5.1
BuildRequires:  cmake >= 2.4.6
BuildRequires:  gcc-c++ >= 4.1
BuildRequires:  readline-devel


%description
Zypper is a command line tool for managing software. It can be used to add
package repositories, search for packages, install, remove, or update packages,
install patches, hardware drivers, verify dependencies, and more.

Zypper can be used interactively or non-interactively by user, from scripts,
or front-ends. 




%prep
%setup -q -n %{name}-%{version}

# 0001-Support-searching-file-with-full-path.patch
%patch0 -p1
# 0002-Support-fuzzy-search-file.patch
%patch1 -p1
# 0003-fix-linker-error-with-ncurses-library.patch
%patch2 -p1
# >> setup
# << setup

%build
cp %{SOURCE1001} .
# >> build pre
unset LD_AS_NEEDED
# << build pre

mkdir meego-build
cd meego-build
cmake ..  \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DSYSCONFDIR=%{_sysconfdir} \
    -DMANDIR=%{_mandir} \
    -DCMAKE_VERBOSE_MAKEFILE=TRUE \
    -DCMAKE_C_FLAGS_RELEASE:STRING="%{optflags}" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="%{optflags}" \
    -DCMAKE_BUILD_TYPE=Release \
    -DUSE_TRANSLATION_SET=${TRANSLATION_SET:-zypper}

make %{?jobs:-j%jobs}

# >> build post
make -C po %{?jobs:-j %jobs} translations
# << build post
%install
rm -rf %{buildroot}
# >> install pre
# << install pre
cd meego-build
%make_install

# >> install post
make -C po install DESTDIR=$RPM_BUILD_ROOT
# Create filelist with translations
cd ..
%{__install} -d -m755 %buildroot%_var/log
touch %buildroot%_var/log/zypper.log

# << install post
%find_lang zypper

# Tizen SDK license
mkdir -p %{buildroot}/usr/share/license
cp COPYING %{buildroot}/usr/share/license/%{name}




%files -f zypper.lang
%manifest zypper.manifest
%defattr(-,root,root,-)
# >> files
%config(noreplace) %{_sysconfdir}/zypp/zypper.conf
%config(noreplace) %{_sysconfdir}/logrotate.d/zypper.lr
%config(noreplace) %{_sysconfdir}/logrotate.d/zypp-refresh.lr
%{_sysconfdir}/bash_completion.d/zypper.sh
%{_bindir}/zypper
%{_bindir}/installation_sources
%{_sbindir}/zypp-refresh
%verify(not mode) %attr (755,root,root) %{_sbindir}/zypp-refresh-wrapper
%dir %_datadir/zypper
%_datadir/zypper/zypper.aug
%dir %_datadir/zypper/xml
%_datadir/zypper/xml/xmlout.rnc
%doc %{_mandir}/*/*
%doc %dir %{_datadir}/doc/packages/zypper
%doc %{_datadir}/doc/packages/zypper/TODO
%doc %{_datadir}/doc/packages/zypper/zypper-rug
%doc %{_datadir}/doc/packages/zypper/COPYING
%doc %{_datadir}/doc/packages/zypper/HACKING
/usr/share/license/%{name}
# declare ownership of the log file but prevent
# it from being erased by rpm -e
%ghost %config(noreplace) %{_var}/log/zypper.log
# << files


